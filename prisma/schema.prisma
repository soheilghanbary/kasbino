datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @default("")
  access_token      String? @default("")
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @default("")
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  products      Product[]

  bio       String? @default("")
  website   String? @default("")
  linkedin  String? @default("")
  instagram String? @default("")
  twitter   String? @default("")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Product {
  id          String  @id @default(cuid())
  name        String? @default("")
  image       String? @default("")
  price       String? @default("")
  description String? @default("")
  userId      String
  user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  published DateTime @default(now())
}
